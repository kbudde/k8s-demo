#@ load("@ytt:data", "data")
#@ traefikLB = "lb.{}".format(data.values.shared.domain)


#@ for username in data.values.application.usernames:
#@ domain = "{}.python.{}".format(username, data.values.shared.domain)
#@ domainWeb = "python-web-{}.{}".format(username, data.values.shared.domain)
#@ redirect = "https://{}/?workspace=/opt/workspace/Projekt.code-workspace".format(domainWeb)
#@ appName = "gitpod-{}".format(username)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ appName
spec:
  selector:
    matchLabels:
      app: #@ appName
  strategy:
    type: Recreate
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: #@ appName
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
      #! move the .openvscode-server to a shared location
      - name: share-vscode
        image: gitpod/openvscode-server:1.93.1
        volumeMounts:
        - name: openvscode-server
          mountPath: /home/openvscode-server-shared
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        command:
        - "/bin/bash"
        - "-c"
        - |
          cp -r /home/.openvscode-server /home/openvscode-server-shared/

      - name: init-permissions
        image: busybox
        command: 
        - "sh"
        - "-c"
        - |
          mkdir -p /home/workspace/Projekt
          chown -R 1000:1000 /home/workspace
        volumeMounts:
        - name: workspace
          mountPath: /home/workspace

      containers:
      - name: vscode
        image: kbudde/tmp:openvscode-python
        volumeMounts:
        - name: openvscode-server
          mountPath: /home/.openvscode-server
          subPath: .openvscode-server
        - name: workspace
          mountPath: /home/workspace
        - name: examples
          readOnly: true
          mountPath: /opt/examples
        - name: workspace-settings
          mountPath: /opt/workspace
          readOnly: true
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources:
          limits:
            memory: "1.5Gi"
          requests:
            memory: "768Mi"
            cpu: "1"

      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: #@ appName
      - name: openvscode-server
        emptyDir: {}
      - name: examples
        configMap:
          name: examples
      - name: workspace-settings
        configMap:
          name: workspace-settings
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: #@ appName
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: #@ appName
spec:
  selector:
    app: #@ appName
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: #@ appName
  annotations:
    external-dns.alpha.kubernetes.io/target: #@ traefikLB
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
  - websecure
  - web
  routes:
  - kind: Rule
    match: #@ "Host(`{}`)".format(domainWeb)
    priority: 10
    services:
      - name: #@ appName
        port: 3000
        scheme: http
    middlewares:
    - name: #@ appName
  - kind: Rule
    match: #@ "Host(`{}`)".format(domain)
    priority: 10
    services:
      - name: #@ appName
        port: 3000
        scheme: http
    middlewares:
    - name: #@ "redirect-{}".format(username)
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: #@ "redirect-{}".format(username)
spec:
  redirectRegex:
    regex: ".*"
    replacement: #@ redirect
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: #@ appName
spec:
  basicAuth:
    secret: #@ appName
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ appName
stringData:
  users: #@ "<path:static/user.yaml#{}>".format(username)

#@ end