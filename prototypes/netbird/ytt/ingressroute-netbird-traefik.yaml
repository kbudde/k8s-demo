#@ load("@ytt:data", "data")
#@ domain = "netbird." + data.values.shared.domain
#@ traefikLB = "lb." + data.values.shared.domain
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: netbird-traefik
  annotations:
    external-dns.alpha.kubernetes.io/target: #@ traefikLB
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: #@ "Host(`{}`) && !PathPrefix(`/api`) && !PathPrefix(`/management`) && !PathPrefix(`/signalexchange`) && !PathPrefix(`/relay`)".format(domain)
      services:
        - name: netbird-traefik-dashboard
          namespace: netbird-traefik
          passHostHeader: true
          port: 80
    - kind: Rule
      match: #@ "Host(`{}`) && PathPrefix(`/api`)".format(domain)
      services:
        - name: netbird-traefik-management
          namespace: netbird-traefik
          passHostHeader: true
          port: 80
    - kind: Rule
      match: #@ "Host(`{}`) && PathPrefix(`/relay`)".format(domain)
      services:
        - name: netbird-traefik-relay
          namespace: netbird-traefik
          passHostHeader: true
          port: 33080
    - kind: Rule
      match: #@ "Host(`{}`) && PathPrefix(`/management`)".format(domain)
      services:
        - name: netbird-traefik-management
          namespace: netbird-traefik
          passHostHeader: true
          port: 80
          scheme: h2c
    - kind: Rule
      match: #@ "Host(`{}`) && PathPrefix(`/signalexchange`)".format(domain)
      services:
        - name: netbird-traefik-signal
          namespace: netbird-traefik
          passHostHeader: true
          port: 80
          scheme: h2c
  tls:
    secretName: netbird-tls
