apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/component: clickhouse
    app.kubernetes.io/instance: coroot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-3.1.6
  name: coroot-clickhouse-shard0
  namespace: coroot
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: clickhouse
      app.kubernetes.io/instance: coroot
      app.kubernetes.io/name: clickhouse
  serviceName: coroot-clickhouse-headless
  template:
    metadata:
      annotations:
        checksum/config: 7e7cb279be4cca0d087d13ab75912b829bf8b3e93ecc452bcda7632233c945bd
        checksum/config-extra: 3df4ef1c91091f26f16d4c1427ac131be95b583e900a1a447e9d5bfe4b1d3172
      labels:
        app.kubernetes.io/component: clickhouse
        app.kubernetes.io/instance: coroot
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: clickhouse
        helm.sh/chart: clickhouse-3.1.6
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: clickhouse
                    app.kubernetes.io/instance: coroot
                    app.kubernetes.io/name: clickhouse
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - command:
            - /scripts/setup.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: CLICKHOUSE_HTTP_PORT
              value: "8123"
            - name: CLICKHOUSE_TCP_PORT
              value: "9000"
            - name: CLICKHOUSE_MYSQL_PORT
              value: "9004"
            - name: CLICKHOUSE_POSTGRESQL_PORT
              value: "9005"
            - name: CLICKHOUSE_INTERSERVER_HTTP_PORT
              value: "9009"
            - name: CLICKHOUSE_ADMIN_USER
              value: default
            - name: CLICKHOUSE_SHARD_ID
              value: shard0
            - name: CLICKHOUSE_REPLICA_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLICKHOUSE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: coroot-clickhouse
          envFrom: null
          image: docker.io/bitnami/clickhouse:24.12.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: clickhouse
          ports:
            - containerPort: 8123
              name: http
            - containerPort: 9000
              name: tcp
            - containerPort: 9005
              name: tcp-postgresql
            - containerPort: 9004
              name: tcp-mysql
            - containerPort: 9009
              name: http-intersrv
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits: {}
            requests: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
            - mountPath: /scripts/setup.sh
              name: scripts
              subPath: setup.sh
            - mountPath: /bitnami/clickhouse
              name: data
            - mountPath: /bitnami/clickhouse/etc/conf.d/default
              name: config
            - mountPath: /bitnami/clickhouse/etc/conf.d/extra-configmap
              name: extra-config
      initContainers: null
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coroot-clickhouse
      volumes:
        - configMap:
            defaultMode: 493
            name: coroot-clickhouse-scripts
          name: scripts
        - configMap:
            name: coroot-clickhouse
          name: config
        - configMap:
            name: coroot-clickhouse-extra
          name: extra-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        annotations: null
        labels:
          app.kubernetes.io/component: clickhouse
          app.kubernetes.io/instance: coroot
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: clickhouse
          helm.sh/chart: clickhouse-3.1.6
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
