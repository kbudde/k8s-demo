apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    coroot.com/custom-application-name: designate-certmanager-webhook
    reloader.stakater.com/auto: "true"
  labels:
    app: designate-certmanager-webhook
    chart: designate-certmanager-webhook-0.6.1
    heritage: Helm
    release: designate-certmanager-webhook
  name: designate-certmanager-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: designate-certmanager-webhook
      release: designate-certmanager-webhook
  template:
    metadata:
      labels:
        app: designate-certmanager-webhook
        release: designate-certmanager-webhook
    spec:
      containers:
        - args:
            - --tls-cert-file=/tls/tls.crt
            - --tls-private-key-file=/tls/tls.key
            - --secure-port=8443
          envFrom:
            - secretRef:
                name: cloud-credentials
          image: syseleven/designate-certmanager-webhook:0.2.18
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          name: designate-certmanager-webhook
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tls
              name: certs
              readOnly: true
      initContainers:
        - args:
            - -c
            - while [ ! -f /tls/tls.key ]; do sleep 5; done
          command:
            - /bin/sh
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-tls-secret
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tls
              name: certs
              readOnly: true
        - args:
            - apply
            - -f
            - /config/apiservice.yaml
          command:
            - kubectl
          image: bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          name: add-apiservice
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /config
              name: apiservice-config
              readOnly: true
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: designate-certmanager-webhook
      volumes:
        - configMap:
            name: designate-certmanager-webhook-apiservice
          name: apiservice-config
        - name: certs
          secret:
            optional: true
            secretName: designate-certmanager-webhook-webhook-tls
