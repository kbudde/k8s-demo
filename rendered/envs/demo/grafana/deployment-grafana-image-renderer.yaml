apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana-image-renderer
    app.kubernetes.io/version: 12.0.0
    helm.sh/chart: grafana-9.0.0
  name: grafana-image-renderer
  namespace: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana-image-renderer
  template:
    metadata:
      annotations:
        checksum/config: c68727d05cf9cdc9dd3b4741f0f50d1e1f7bdcfb73c41de24cbf5086c11bf0fe
      labels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana-image-renderer
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: HTTP_PORT
              value: "8081"
            - name: ENABLE_METRICS
              value: "true"
            - name: HTTP_HOST
              value: 0.0.0.0
            - name: XDG_CACHE_HOME
              value: /tmp/.chromium
            - name: XDG_CONFIG_HOME
              value: /tmp/.chromium
          image: docker.io/grafana/grafana-image-renderer:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: http
          name: grafana-image-renderer
          ports:
            - containerPort: 8081
              name: http
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: image-renderer-tmpfs
      volumes:
        - emptyDir: {}
          name: image-renderer-tmpfs
