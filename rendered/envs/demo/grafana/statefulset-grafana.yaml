apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 11.2.1
    helm.sh/chart: grafana-8.5.2
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
  serviceName: grafana-headless
  template:
    metadata:
      annotations:
        checksum/config: 891435a06ffc38953fa92ad529725669ddcf70074c64b2a137e5dcf5599e335a
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 5fcd185be0c94a9028f80bed77574387312a4578e6e36d9bb0830770ff768eee
        kubectl.kubernetes.io/default-container: grafana
      labels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_alert
            - name: FOLDER
              value: /etc/grafana/provisioning/alerting
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/alerting/reload
            - name: REQ_METHOD
              value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.27.4
          imagePullPolicy: IfNotPresent
          name: grafana-sc-alerts
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/alerting
              name: sc-alerts-volume
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_dashboard
            - name: FOLDER
              value: /tmp/dashboards
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/dashboards/reload
            - name: REQ_METHOD
              value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.27.4
          imagePullPolicy: IfNotPresent
          name: grafana-sc-dashboard
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp/dashboards
              name: sc-dashboard-volume
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_datasource
            - name: FOLDER
              value: /etc/grafana/provisioning/datasources
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/datasources/reload
            - name: REQ_METHOD
              value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.27.4
          imagePullPolicy: IfNotPresent
          name: grafana-sc-datasources
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: sc-datasources-volume
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_notifier
            - name: FOLDER
              value: /etc/grafana/provisioning/notifiers
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/notifications/reload
            - name: REQ_METHOD
              value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.27.4
          imagePullPolicy: IfNotPresent
          name: grafana-sc-notifiers
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/notifiers
              name: sc-notifiers-volume
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_plugin
            - name: FOLDER
              value: /etc/grafana/provisioning/plugins
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/plugins/reload
            - name: REQ_METHOD
              value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.27.4
          imagePullPolicy: IfNotPresent
          name: grafana-sc-plugins
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/plugins
              name: sc-plugins-volume
        - env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: kbudde-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kbudde-user
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: plugins
                  name: grafana
            - name: GF_RENDERING_SERVER_URL
              value: http://grafana-image-renderer.grafana:8081/render
            - name: GF_RENDERING_CALLBACK_URL
              value: http://grafana.grafana:80/
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
              value: victorialogs-datasource
          image: docker.io/grafana/grafana:11.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana
              protocol: TCP
            - containerPort: 9094
              name: gossip-tcp
              protocol: TCP
            - containerPort: 9094
              name: gossip-udp
              protocol: UDP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: config
              subPath: grafana.ini
            - mountPath: /var/lib/grafana
              name: storage
            - mountPath: /etc/grafana/provisioning/alerting
              name: sc-alerts-volume
            - mountPath: /tmp/dashboards
              name: sc-dashboard-volume
            - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
              name: sc-dashboard-provider
              subPath: provider.yaml
            - mountPath: /etc/grafana/provisioning/datasources
              name: sc-datasources-volume
            - mountPath: /etc/grafana/provisioning/plugins
              name: sc-plugins-volume
            - mountPath: /etc/grafana/provisioning/notifiers
              name: sc-notifiers-volume
      enableServiceLinks: true
      initContainers:
        - command:
            - chown
            - -R
            - 472:472
            - /var/lib/grafana
          image: docker.io/library/busybox:1.31.1
          imagePullPolicy: IfNotPresent
          name: init-chown-data
          securityContext:
            capabilities:
              add:
                - CHOWN
              drop:
                - NET_RAW
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: storage
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
        - configMap:
            name: grafana
          name: config
        - name: storage
          persistentVolumeClaim:
            claimName: grafana
        - emptyDir: {}
          name: sc-alerts-volume
        - emptyDir: {}
          name: sc-dashboard-volume
        - configMap:
            name: grafana-config-dashboards
          name: sc-dashboard-provider
        - emptyDir: {}
          name: sc-datasources-volume
        - emptyDir: {}
          name: sc-plugins-volume
        - emptyDir: {}
          name: sc-notifiers-volume
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: null
