apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/component: replica
    app.kubernetes.io/instance: oncall
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
  name: oncall-redis-replicas
  namespace: oncall
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: replica
      app.kubernetes.io/instance: oncall
      app.kubernetes.io/name: redis
  serviceName: oncall-redis-headless
  template:
    metadata:
      annotations:
        checksum/configmap: 59ea25348ab7ad5240136a729256eea4b98f8255918604ccc7ebaf7197255758
        checksum/health: ab6a9a4957648ae28b13113cfb5a7cc6f4cc547f19a064ab318fe80c4078b0fc
        checksum/scripts: d00b1eda437baeac140ac7e4ccca1b7c68daf6e16af0f4eac49f7d05e94019a2
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/component: replica
        app.kubernetes.io/instance: oncall
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-16.13.2
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: replica
                    app.kubernetes.io/instance: oncall
                    app.kubernetes.io/name: redis
                namespaces:
                  - oncall
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-replica.sh
          command:
            - /bin/bash
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: slave
            - name: REDIS_MASTER_HOST
              value: oncall-redis-master-0.oncall-redis-headless.oncall.svc.cluster.local
            - name: REDIS_MASTER_PORT_NUMBER
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: oncall-redis
            - name: REDIS_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: oncall-redis
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          image: docker.io/bitnami/redis:6.2.7-debian-11-r11
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local_and_master.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local_and_master.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsUser: 1001
          startupProbe:
            failureThreshold: 22
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: redis
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /opt/bitnami/scripts/start-scripts
              name: start-scripts
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
              subPath: null
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc
              name: redis-tmp-conf
      securityContext:
        fsGroup: 1001
      serviceAccountName: oncall-redis
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 493
            name: oncall-redis-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: oncall-redis-health
          name: health
        - configMap:
            name: oncall-redis-configuration
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/component: replica
          app.kubernetes.io/instance: oncall
          app.kubernetes.io/name: redis
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
