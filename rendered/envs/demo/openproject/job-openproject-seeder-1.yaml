apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
  labels:
    app.kubernetes.io/instance: openproject
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: openproject
    app.kubernetes.io/version: 14.6.3
    helm.sh/chart: openproject-8.3.2
  name: openproject-seeder-1
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: openproject
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: openproject
        app.kubernetes.io/version: 14.6.3
        helm.sh/chart: openproject-8.3.2
        openproject/process: seeder
    spec:
      containers:
        - args:
            - bash
            - /app/docker/prod/seeder
          env:
            - name: OPENPROJECT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: openproject-postgresql
          envFrom:
            - secretRef:
                name: openproject-core
            - secretRef:
                name: openproject-memcached
          image: docker.io/openproject/openproject:14.6.3-slim
          imagePullPolicy: Always
          name: seeder
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /app/tmp
              name: app-tmp
            - mountPath: /var/openproject/assets
              name: data
      initContainers:
        - command:
            - sh
            - -c
            - until pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U openproject; do echo "waiting for database $DATABASE_HOST:$DATABASE_PORT"; sleep 2; done;
          env:
            - name: OPENPROJECT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: openproject-postgresql
          envFrom:
            - secretRef:
                name: openproject-core
            - secretRef:
                name: openproject-memcached
          image: docker.io/postgres:13
          imagePullPolicy: Always
          name: check-db-ready
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 1000
      volumes:
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                creationTimestamp: null
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 5Gi
          name: tmp
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                creationTimestamp: null
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 5Gi
          name: app-tmp
        - name: data
          persistentVolumeClaim:
            claimName: openproject
  ttlSecondsAfterFinished: 6000
