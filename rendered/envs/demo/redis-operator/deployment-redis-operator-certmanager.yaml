apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app: certmanager
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: redis-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: certmanager
    app.kubernetes.io/version: v1.12.4
    helm.sh/chart: certmanager-v1.12.4
  name: redis-operator-certmanager
  namespace: redis-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: redis-operator
      app.kubernetes.io/name: certmanager
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9402"
        prometheus.io/scrape: "true"
      labels:
        app: certmanager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: redis-operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: certmanager
        app.kubernetes.io/version: v1.12.4
        helm.sh/chart: certmanager-v1.12.4
    spec:
      containers:
        - args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=kube-system
            - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.12.4
            - --max-concurrent-challenges=60
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.12.4
          imagePullPolicy: IfNotPresent
          name: certmanager-controller
          ports:
            - containerPort: 9402
              name: http-metrics
              protocol: TCP
            - containerPort: 9403
              name: http-healthz
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: redis-operator-certmanager
