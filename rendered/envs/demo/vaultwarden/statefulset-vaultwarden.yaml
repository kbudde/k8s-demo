apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/component: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/version: 1.34.1
    helm.sh/chart: vaultwarden-0.32.4
  name: vaultwarden
  namespace: vaultwarden
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: vaultwarden
      app.kubernetes.io/instance: vaultwarden
      app.kubernetes.io/name: vaultwarden
  serviceName: vaultwarden
  template:
    metadata:
      annotations:
        checksum/config: 5f9f4b622c0216d3a49e4ce1e4fdfc8bfc9c876d
        checksum/secret: 3303bf12d728b77e70975c081162e489789fdf2e
      labels:
        app.kubernetes.io/component: vaultwarden
        app.kubernetes.io/instance: vaultwarden
        app.kubernetes.io/name: vaultwarden
    spec:
      containers:
        - env:
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  key: SMTP_USERNAME
                  name: vaultwarden-managed
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: SMTP_PASSWORD
                  name: vaultwarden-managed
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  key: ADMIN_TOKEN
                  name: vaultwarden-managed
          envFrom:
            - configMapRef:
                name: vaultwarden
          image: docker.io/vaultwarden/server:1.34.1-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: vaultwarden
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: vaultwarden-data
      serviceAccountName: vaultwarden-svc
  volumeClaimTemplates:
    - metadata:
        annotations:
          meta.helm.sh/release-name: vaultwarden
          meta.helm.sh/release-namespace: vaultwarden
        labels:
          app.kubernetes.io/component: vaultwarden
          app.kubernetes.io/instance: vaultwarden
          app.kubernetes.io/name: vaultwarden
        name: vaultwarden-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
