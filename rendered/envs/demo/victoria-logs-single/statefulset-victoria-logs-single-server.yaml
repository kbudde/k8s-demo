apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/kbudde/k8s-demo
    reloader.stakater.com/auto: "true"
  labels:
    app: server
    app.kubernetes.io/instance: victoria-logs-single
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: victoria-logs-single
    helm.sh/chart: victoria-logs-single-0.5.0
  name: victoria-logs-single-server
  namespace: victoria-logs-single
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: server
      app.kubernetes.io/instance: victoria-logs-single
      app.kubernetes.io/name: victoria-logs-single
  serviceName: victoria-logs-single-server
  template:
    metadata:
      labels:
        app: server
        app.kubernetes.io/instance: victoria-logs-single
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: victoria-logs-single
        helm.sh/chart: victoria-logs-single-0.5.0
    spec:
      containers:
        - args:
            - --retentionPeriod=1
            - --storageDataPath=/storage
            - --envflag.enable=true
            - --envflag.prefix=VM_
            - --loggerFormat=json
          image: victoriametrics/victoria-logs:v0.12.0-victorialogs
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 9428
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          name: victoria-logs-single-server
          ports:
            - containerPort: 9428
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /storage
              name: server-volume
              subPath: null
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 60
      volumes: null
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: server-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 30Gi
